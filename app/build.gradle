apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

apply plugin: 'com.google.protobuf'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.dnnt.touch"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        debug {
            minifyEnabled false
        }
    }

    dataBinding {
        enabled = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    sourceSets {
        main {
            //protobuf 插件配置
            proto {
                srcDir 'src/main/java/com/dnnt/touch/protobuf'
                include '*.proto'
            }
        }
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:27.1.0'
    implementation 'com.android.support:design:27.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:support-v4:27.1.0'
    // test dependencies
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.mockito:mockito-core:2.15.0'
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    // Architecture Components
    implementation 'android.arch.lifecycle:extensions:1.1.0'
    kapt "android.arch.lifecycle:compiler:$rootProject.archLifecycleVersion"
    // Dagger dependencies
    kapt "com.google.dagger:dagger-compiler:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android:$rootProject.daggerVersion"
    implementation "com.google.dagger:dagger-android-support:$rootProject.daggerVersion"
    kapt "com.google.dagger:dagger-android-processor:$rootProject.daggerVersion"
    // Gson dependency
    implementation 'com.google.code.gson:gson:2.8.2'
    //OkHttp dependencies
    implementation "com.squareup.okhttp3:okhttp:$rootProject.okHttpVersion"
    debugImplementation "com.squareup.okhttp3:logging-interceptor:$rootProject.okHttpVersion"
    // Retrofit dependencies
    implementation "com.squareup.retrofit2:converter-gson:$rootProject.retrofitVersion"
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation "com.squareup.retrofit2:retrofit:$rootProject.retrofitVersion"
    testImplementation 'com.squareup.retrofit2:retrofit-mock:2.0.0'
    //RxJava dependencies
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    //Data Binding
    kapt "com.android.databinding:compiler:3.0.1"
    //Glide dependencies
    implementation 'com.github.bumptech.glide:glide:4.6.1'
    kapt 'com.github.bumptech.glide:compiler:4.6.1'
    implementation 'com.github.bumptech.glide:okhttp3-integration:4.6.1'

    //kotlin coroutines(experimental),do not use them in the release version
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:+'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:+'
    implementation "org.jetbrains.anko:anko-coroutines:0.10.4"

    //EvenBus
    implementation 'org.greenrobot:eventbus:3.1.1'

    //ProtoBuf
    implementation 'com.google.protobuf:protobuf-lite:3.0.1'

    //Netty
    implementation 'io.netty:netty-all:4.1.22.Final'

    //DBFlow
    kapt "com.github.Raizlabs.DBFlow:dbflow-processor:${dbflowVersion}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-core:${dbflowVersion}"
    implementation "com.github.Raizlabs.DBFlow:dbflow:${dbflowVersion}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-kotlinextensions:${dbflowVersion}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-rx2:${dbflowVersion}"
    implementation "com.github.Raizlabs.DBFlow:dbflow-rx2-kotlinextensions:${dbflowVersion}"

}

//根据*.proto自动生成java文件
protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.5.1'
    }
    plugins {
        javalite {
            artifact = "com.google.protobuf:protoc-gen-javalite:3.0.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.builtins {
                remove java
            }
            task.plugins {
                javalite {}
            }
        }
    }
}

kotlin {
    experimental {
        coroutines 'enable'
    }
}
